#ifndef {{header_guard}}
#define {{header_guard}}

#include <Deamer/External/Cpp/Parser/Interface/Parser.h>

namespace {{language_name}} { namespace dparse { namespace parser {

    class Parser : public ::deamer::external::cpp::parser::Parser
    {
    public:
        Parser() = default;
        ~Parser() override = default;

    public:
        ::deamer::external::cpp::ast::Tree* Parse(const std::string& text) const override
        {
            return this->::deamer::external::cpp::parser::Parser::Parse(text);
        }
        
        ::deamer::external::cpp::ast::Tree* Parse(const std::string& text,
			  ::deamer::external::cpp::parser::ASTConstructionPolicy constructionPolicy) const override;

		::deamer::external::cpp::ast::Tree* Parse(std::vector<const ::deamer::external::cpp::lexer::TerminalObject*> terminalObjects) const override
        {
            return this->::deamer::external::cpp::parser::Parser::Parse(std::move(terminalObjects));
        }
        
		::deamer::external::cpp::ast::Tree* Parse(std::vector<const ::deamer::external::cpp::lexer::TerminalObject*> terminalObjects,
			  ::deamer::external::cpp::parser::ASTConstructionPolicy constructionPolicy) const override;
    };

}}}

#endif // {{header_guard}}
